version: '3.8'

services:
  ctm-az-core:
    build:
      context: .
      dockerfile: docker/Dockerfile.core
    container_name: ctm-az-core
    restart: unless-stopped
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - TOKEN_OPTIMIZATION_MODE=${TOKEN_OPTIMIZATION_MODE:-balanced}
      - MAX_WORKERS=${MAX_WORKERS:-4}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
      - CTM_AZ_LOGGING_LEVEL=${LOG_LEVEL:-info}
      - CTM_AZ_PERFORMANCE_CUDA_ENABLED=${CUDA_ENABLED:-true}
    volumes:
      - ./configs:/app/configs:ro
      - ./data:/app/data:rw
      - ./models:/app/models:ro
      - ./logs:/app/logs:rw
      - ./state:/app/state:rw
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: false
    tmpfs:
      - /tmp
    command: python -m src.cli --config /app/configs/production.yaml dfz --interactive
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - ctm-network
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  ctm-az-monitor:
    build:
      context: .
      dockerfile: docker/Dockerfile.monitor
    container_name: ctm-az-monitor
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      - CORE_API_URL=http://ctm-az-core:8000
      - DASH_DEBUG=${DASH_DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
      - AUTH_USERNAME=${AUTH_USERNAME:-admin}
      - AUTH_PASSWORD=${AUTH_PASSWORD:-changez_ce_mot_de_passe}
    volumes:
      - ./data:/app/data:ro
      - ./logs:/app/logs:rw
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: false
    tmpfs:
      - /tmp
    depends_on:
      ctm-az-core:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - ctm-network
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  ctm-az-test-runner:
    build:
      context: .
      dockerfile: docker/Dockerfile.tests
    container_name: ctm-az-test-runner
    environment:
      - CORE_API_URL=http://ctm-az-core:8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./tests:/app/tests
      - ./results:/app/results
    depends_on:
      ctm-az-core:
        condition: service_healthy
    profiles:
      - testing
    networks:
      - ctm-network

  # Optional DFZ integration service (uncomment if needed)
  # dfz:
  #   image: dfz-evolution:latest
  #   container_name: dfz-evolution
  #   volumes:
  #     - ./dfz-data:/app/data
  #     - ./dfz-configs:/app/configs
  #   ports:
  #     - "8001:8001"
  #   environment:
  #     - DFZ_PLUGINS_ENABLED=true
  #     - DFZ_PLUGINS_PATH=/app/plugins
  #   depends_on:
  #     - ctm-az-core
  #   restart: unless-stopped
  #   networks:
  #     - ctm-network

networks:
  ctm-network:
    driver: bridge